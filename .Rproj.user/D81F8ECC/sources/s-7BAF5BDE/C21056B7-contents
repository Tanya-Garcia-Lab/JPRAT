###############################################################
## Typically, we don't want to combine data between analyses ##
## But we allow it if necessary        	    	    	     ##
###############################################################

# if(!exists(as.character(substitute(combine.data)))){
# 	combine.data <- FALSE
# }
#
# if(!exists(as.character(substitute(use_real_data)))){
#   use_real_data <- TRUE
# }
#
# if(!exists(as.character(substitute(num_study)))){
#   num_study <- 3
# }

###################################################
default.options<-default.options.for.data.setting()
###################################################

## default values
use_real_data<-default.options$use_real_data
combine.data<-default.options$combine.data


#########################################################################
reformatted.data.for.analysis.results<-data.reformatted.for.analysis.results(
                                            study.names, event.outcome.names,
                                            color.names, legend.names,
                                            which.nonfunctional.covariate.comparisons)

#########################################################################

## datasets are reformmated, so that results plots and tables can be produced;
num_study<-reformatted.data.for.analysis.results$num_study;



###############
## Load data ##
###############

data.truth <- read.table("data-raw/out_truth_real_output_iseed_1.dat",header=FALSE)
data.theta <- read.table("data-raw/out_thetaest_real_output_iseed_1.dat",header=FALSE)

if(num_study > 1){
  data.combi <- read.table("data-raw/out_combi_real_output_iseed_1.dat",header=FALSE)
} else {
  data.combi <- NULL
}

data.count <- read.table("data-raw/out_count_real_output_iseed_1.dat",header=FALSE)
##if(1==0){ ## for testing
 data.count.outside <- read.table("data-raw/out_outside_count_real_output_iseed_1.dat",header=FALSE)
##}

#if(use_real_data==TRUE){
  nrisk <- read.table("data-raw/out_nrisk.dat",header=TRUE)
#}



#########################################################################
## add other files to compare COX model with PROP ODDS model if needed ##
########################################################################

#if(exists(as.character(substitute(other.dir)))){
#  data.truth.other <- read.table(paste(other.dir,"out_truth.dat",sep="/"),
#           header=FALSE)
#  data.theta.other <- read.table(paste(other.dir,"out_theta.dat",sep="/"),
#                header=FALSE)
#  nrisk.other <- read.table(paste(other.dir,"out_nrisk.dat",sep="/"),
#                header=TRUE)
#  if(num_study > 1){
#    data.combi.other <- read.table(paste(other.dir,"out_combi.dat",sep="/"),
#       header=FALSE)
#  } else {
#    data.combi.other <- NULL
#  }
#} else {
#  data.truth.other <- NULL
#  data.theta.other <- NULL
#  nrisk.other <- NULL
#  data.combi.other <- NULL

#}


##########################################
## parameters set if combine.data=FALSE ##
##########################################
#if(combine.data==FALSE){
#  s.names.use <- NULL
#  s.names.other.use <- NULL
#}


results.out <- view.all.results(
  ############################
  # arguments for JPRAT     ##
  ############################
  study.names,
  data.file.names,
  nonfunctional.covariate.names,
  functional.covariate.names,
  othercovariate.names,
  event.outcome.names,
  delta.names,
  time.points.for.prediction,
  time.points.for.conditional.prediction,
  time.points.for.conditional.prediction.toadd,
  nonfunctional.covariate.value,
  functional.covariate.values.of.interest,
  #############################
  ## Input: How to analysis  ##
  #############################
  number.of.bootstraps, #=100,
  use.functional.beta.intercept,
  use.functional.event.coefficients,
  use.functional.study.coefficients,
  check.study.equality,
  estimated.parameters.common.for.all.studies,
  what.analyzed.separately,               #="none",
  estimation.when.censoring.depends.on.z, #=FALSE,
  use.bootstrap.variance,                 #=FALSE,
  #estimate.variances,                     #=TRUE? OR "est"
  #############################
  ## To get Results          ##
  #############################
  ##########################
  ## For plotting results ##
  ##########################
  functional.covariate.values.of.interest.ci,
  #functional.covariate.values.for.prediction,
  #nonfunctional.covariate.comparisons
  time.points.of.interest,
  time.points.of.interest.ci,
  label.for.alpha.values.over.time=NULL,
  which.nonfunctional.covariate.comparisons, ## return nonfunctional covariate comparison
  color.names, ## returns color.labels
  legend.names, ## returns legend.labels
  functional.covariate.comparisons,
  functional.covariate.comparisons.for.sample.size=NULL,
  #############################
  # plot options             ##
  #############################
  do.plots,
  plot.confidence.intervals,
  ###########################
  # Label figures or files ##
  ###########################
  add.number.at.risk.legend,
  ylabel.for.plots.comparing.studies,
  xlabel.for.plots.comparing.studies,
  file.name.for.analysis, ## figure names
  #######################
  ## Output from JPRAT ##
  #######################
  data.truth=data.truth,
  data.theta=data.theta,
  data.combi=data.combi,
  data.count=data.count,
  data.count.outside=data.count.outside,
  nrisk=nrisk,
  data.truth.other=NULL,
  data.theta.other=NULL,
  nrisk.other=NULL,
  data.combi.other=NULL,
  #combine.data=FALSE, ## default option?
  s.names.use=NULL,
  s.names.other.use=NULL,
  #analysis.to.run,
  ########################################################
  ## for computing sample sizes: users do not need them ##
  ########################################################
  type1.error=NULL,
  type2.error=NULL,
  treatment.effect=NULL,
  dropout.rate=NULL,
  #####################################
  ## Do we show results description? ##
  #####################################
  show.results.description
	)


